<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.talkweb.ei.outmanager.dao.VOutUsergzMapper">
  <resultMap id="BaseResultMap" type="com.talkweb.ei.outmanager.model.VOutUsergz">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="CONCODE" jdbcType="VARCHAR" property="concode" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="COMPANYID" jdbcType="VARCHAR" property="companyid" />
    <result column="MONTH" jdbcType="VARCHAR" property="month" />
    <result column="JIBEN" jdbcType="DECIMAL" property="jiben" />
    <result column="JIXIAO" jdbcType="DECIMAL" property="jixiao" />
    <result column="GUOJIE" jdbcType="DECIMAL" property="guojie" />
    <result column="JINTIE" jdbcType="DECIMAL" property="jintie" />
    <result column="QTGZ" jdbcType="DECIMAL" property="qtgz" />
    <result column="JIABAN" jdbcType="DECIMAL" property="jiaban" />
    <result column="JIANGJIN" jdbcType="DECIMAL" property="jiangjin" />
    <result column="YFA" jdbcType="DECIMAL" property="yfa" />
    <result column="SHIFA" jdbcType="DECIMAL" property="shifa" />
    <result column="WUXIAN" jdbcType="DECIMAL" property="wuxian" />
    <result column="GEREN" jdbcType="DECIMAL" property="geren" />
    <result column="SHENGYU" jdbcType="DECIMAL" property="shengyu" />
    <result column="YANGLAO" jdbcType="DECIMAL" property="yanglao" />
    <result column="YILIAO" jdbcType="DECIMAL" property="yiliao" />
    <result column="SHIYE" jdbcType="DECIMAL" property="shiye" />
    <result column="GONGJI" jdbcType="DECIMAL" property="gongji" />
    <result column="GONGSHANG" jdbcType="DECIMAL" property="gongshang" />
    <result column="GSWUXIAN" jdbcType="DECIMAL" property="gswuxian" />
    <result column="GONGHUI" jdbcType="DECIMAL" property="gonghui" />
    <result column="GUANLI" jdbcType="DECIMAL" property="guanli" />
    <result column="SHUIJIN" jdbcType="DECIMAL" property="shuijin" />
    <result column="QTJINE" jdbcType="DECIMAL" property="qtjine" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="STARTFWDATE" jdbcType="DATE" property="startfwdate" />
    <result column="STARTBXDATE" jdbcType="DATE" property="startbxdate" />
    <result column="SXKK" jdbcType="DECIMAL" property="sxkk" />
    <result column="SHKK" jdbcType="DECIMAL" property="shkk" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    NAME, CODE, CONCODE, UNIT, ID, USERID, COMPANYID, MONTH, JIBEN, JIXIAO, GUOJIE, JINTIE, 
    QTGZ, JIABAN, JIANGJIN, YFA, SHIFA, WUXIAN, GEREN, SHENGYU, YANGLAO, YILIAO, SHIYE, 
    GONGJI, GONGSHANG, GSWUXIAN, GONGHUI, GUANLI, SHUIJIN, QTJINE, REMARK, STARTFWDATE, 
    STARTBXDATE, SXKK, SHKK
  </sql>
  <select id="selectByExample" parameterType="com.talkweb.ei.outmanager.model.VOutUsergzExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_out_usergz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.talkweb.ei.outmanager.model.VOutUsergzExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    delete from v_out_usergz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.talkweb.ei.outmanager.model.VOutUsergz">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    insert into v_out_usergz (NAME, CODE, CONCODE, 
      UNIT, ID, USERID, COMPANYID, 
      MONTH, JIBEN, JIXIAO, 
      GUOJIE, JINTIE, QTGZ, 
      JIABAN, JIANGJIN, YFA, 
      SHIFA, WUXIAN, GEREN, 
      SHENGYU, YANGLAO, YILIAO, 
      SHIYE, GONGJI, GONGSHANG, 
      GSWUXIAN, GONGHUI, GUANLI, 
      SHUIJIN, QTJINE, REMARK, 
      STARTFWDATE, STARTBXDATE, SXKK, 
      SHKK)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{concode,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{companyid,jdbcType=VARCHAR}, 
      #{month,jdbcType=VARCHAR}, #{jiben,jdbcType=DECIMAL}, #{jixiao,jdbcType=DECIMAL}, 
      #{guojie,jdbcType=DECIMAL}, #{jintie,jdbcType=DECIMAL}, #{qtgz,jdbcType=DECIMAL}, 
      #{jiaban,jdbcType=DECIMAL}, #{jiangjin,jdbcType=DECIMAL}, #{yfa,jdbcType=DECIMAL}, 
      #{shifa,jdbcType=DECIMAL}, #{wuxian,jdbcType=DECIMAL}, #{geren,jdbcType=DECIMAL}, 
      #{shengyu,jdbcType=DECIMAL}, #{yanglao,jdbcType=DECIMAL}, #{yiliao,jdbcType=DECIMAL}, 
      #{shiye,jdbcType=DECIMAL}, #{gongji,jdbcType=DECIMAL}, #{gongshang,jdbcType=DECIMAL}, 
      #{gswuxian,jdbcType=DECIMAL}, #{gonghui,jdbcType=DECIMAL}, #{guanli,jdbcType=DECIMAL}, 
      #{shuijin,jdbcType=DECIMAL}, #{qtjine,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{startfwdate,jdbcType=DATE}, #{startbxdate,jdbcType=DATE}, #{sxkk,jdbcType=DECIMAL}, 
      #{shkk,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.talkweb.ei.outmanager.model.VOutUsergz">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    insert into v_out_usergz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        NAME,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="concode != null">
        CONCODE,
      </if>
      <if test="unit != null">
        UNIT,
      </if>
      <if test="id != null">
        ID,
      </if>
      <if test="userid != null">
        USERID,
      </if>
      <if test="companyid != null">
        COMPANYID,
      </if>
      <if test="month != null">
        MONTH,
      </if>
      <if test="jiben != null">
        JIBEN,
      </if>
      <if test="jixiao != null">
        JIXIAO,
      </if>
      <if test="guojie != null">
        GUOJIE,
      </if>
      <if test="jintie != null">
        JINTIE,
      </if>
      <if test="qtgz != null">
        QTGZ,
      </if>
      <if test="jiaban != null">
        JIABAN,
      </if>
      <if test="jiangjin != null">
        JIANGJIN,
      </if>
      <if test="yfa != null">
        YFA,
      </if>
      <if test="shifa != null">
        SHIFA,
      </if>
      <if test="wuxian != null">
        WUXIAN,
      </if>
      <if test="geren != null">
        GEREN,
      </if>
      <if test="shengyu != null">
        SHENGYU,
      </if>
      <if test="yanglao != null">
        YANGLAO,
      </if>
      <if test="yiliao != null">
        YILIAO,
      </if>
      <if test="shiye != null">
        SHIYE,
      </if>
      <if test="gongji != null">
        GONGJI,
      </if>
      <if test="gongshang != null">
        GONGSHANG,
      </if>
      <if test="gswuxian != null">
        GSWUXIAN,
      </if>
      <if test="gonghui != null">
        GONGHUI,
      </if>
      <if test="guanli != null">
        GUANLI,
      </if>
      <if test="shuijin != null">
        SHUIJIN,
      </if>
      <if test="qtjine != null">
        QTJINE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="startfwdate != null">
        STARTFWDATE,
      </if>
      <if test="startbxdate != null">
        STARTBXDATE,
      </if>
      <if test="sxkk != null">
        SXKK,
      </if>
      <if test="shkk != null">
        SHKK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="concode != null">
        #{concode,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="jiben != null">
        #{jiben,jdbcType=DECIMAL},
      </if>
      <if test="jixiao != null">
        #{jixiao,jdbcType=DECIMAL},
      </if>
      <if test="guojie != null">
        #{guojie,jdbcType=DECIMAL},
      </if>
      <if test="jintie != null">
        #{jintie,jdbcType=DECIMAL},
      </if>
      <if test="qtgz != null">
        #{qtgz,jdbcType=DECIMAL},
      </if>
      <if test="jiaban != null">
        #{jiaban,jdbcType=DECIMAL},
      </if>
      <if test="jiangjin != null">
        #{jiangjin,jdbcType=DECIMAL},
      </if>
      <if test="yfa != null">
        #{yfa,jdbcType=DECIMAL},
      </if>
      <if test="shifa != null">
        #{shifa,jdbcType=DECIMAL},
      </if>
      <if test="wuxian != null">
        #{wuxian,jdbcType=DECIMAL},
      </if>
      <if test="geren != null">
        #{geren,jdbcType=DECIMAL},
      </if>
      <if test="shengyu != null">
        #{shengyu,jdbcType=DECIMAL},
      </if>
      <if test="yanglao != null">
        #{yanglao,jdbcType=DECIMAL},
      </if>
      <if test="yiliao != null">
        #{yiliao,jdbcType=DECIMAL},
      </if>
      <if test="shiye != null">
        #{shiye,jdbcType=DECIMAL},
      </if>
      <if test="gongji != null">
        #{gongji,jdbcType=DECIMAL},
      </if>
      <if test="gongshang != null">
        #{gongshang,jdbcType=DECIMAL},
      </if>
      <if test="gswuxian != null">
        #{gswuxian,jdbcType=DECIMAL},
      </if>
      <if test="gonghui != null">
        #{gonghui,jdbcType=DECIMAL},
      </if>
      <if test="guanli != null">
        #{guanli,jdbcType=DECIMAL},
      </if>
      <if test="shuijin != null">
        #{shuijin,jdbcType=DECIMAL},
      </if>
      <if test="qtjine != null">
        #{qtjine,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="startfwdate != null">
        #{startfwdate,jdbcType=DATE},
      </if>
      <if test="startbxdate != null">
        #{startbxdate,jdbcType=DATE},
      </if>
      <if test="sxkk != null">
        #{sxkk,jdbcType=DECIMAL},
      </if>
      <if test="shkk != null">
        #{shkk,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.talkweb.ei.outmanager.model.VOutUsergzExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    select count(*) from v_out_usergz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    update v_out_usergz
    <set>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.concode != null">
        CONCODE = #{record.concode,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        UNIT = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.companyid != null">
        COMPANYID = #{record.companyid,jdbcType=VARCHAR},
      </if>
      <if test="record.month != null">
        MONTH = #{record.month,jdbcType=VARCHAR},
      </if>
      <if test="record.jiben != null">
        JIBEN = #{record.jiben,jdbcType=DECIMAL},
      </if>
      <if test="record.jixiao != null">
        JIXIAO = #{record.jixiao,jdbcType=DECIMAL},
      </if>
      <if test="record.guojie != null">
        GUOJIE = #{record.guojie,jdbcType=DECIMAL},
      </if>
      <if test="record.jintie != null">
        JINTIE = #{record.jintie,jdbcType=DECIMAL},
      </if>
      <if test="record.qtgz != null">
        QTGZ = #{record.qtgz,jdbcType=DECIMAL},
      </if>
      <if test="record.jiaban != null">
        JIABAN = #{record.jiaban,jdbcType=DECIMAL},
      </if>
      <if test="record.jiangjin != null">
        JIANGJIN = #{record.jiangjin,jdbcType=DECIMAL},
      </if>
      <if test="record.yfa != null">
        YFA = #{record.yfa,jdbcType=DECIMAL},
      </if>
      <if test="record.shifa != null">
        SHIFA = #{record.shifa,jdbcType=DECIMAL},
      </if>
      <if test="record.wuxian != null">
        WUXIAN = #{record.wuxian,jdbcType=DECIMAL},
      </if>
      <if test="record.geren != null">
        GEREN = #{record.geren,jdbcType=DECIMAL},
      </if>
      <if test="record.shengyu != null">
        SHENGYU = #{record.shengyu,jdbcType=DECIMAL},
      </if>
      <if test="record.yanglao != null">
        YANGLAO = #{record.yanglao,jdbcType=DECIMAL},
      </if>
      <if test="record.yiliao != null">
        YILIAO = #{record.yiliao,jdbcType=DECIMAL},
      </if>
      <if test="record.shiye != null">
        SHIYE = #{record.shiye,jdbcType=DECIMAL},
      </if>
      <if test="record.gongji != null">
        GONGJI = #{record.gongji,jdbcType=DECIMAL},
      </if>
      <if test="record.gongshang != null">
        GONGSHANG = #{record.gongshang,jdbcType=DECIMAL},
      </if>
      <if test="record.gswuxian != null">
        GSWUXIAN = #{record.gswuxian,jdbcType=DECIMAL},
      </if>
      <if test="record.gonghui != null">
        GONGHUI = #{record.gonghui,jdbcType=DECIMAL},
      </if>
      <if test="record.guanli != null">
        GUANLI = #{record.guanli,jdbcType=DECIMAL},
      </if>
      <if test="record.shuijin != null">
        SHUIJIN = #{record.shuijin,jdbcType=DECIMAL},
      </if>
      <if test="record.qtjine != null">
        QTJINE = #{record.qtjine,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.startfwdate != null">
        STARTFWDATE = #{record.startfwdate,jdbcType=DATE},
      </if>
      <if test="record.startbxdate != null">
        STARTBXDATE = #{record.startbxdate,jdbcType=DATE},
      </if>
      <if test="record.sxkk != null">
        SXKK = #{record.sxkk,jdbcType=DECIMAL},
      </if>
      <if test="record.shkk != null">
        SHKK = #{record.shkk,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 05 17:31:36 CST 2017.
    -->
    update v_out_usergz
    set NAME = #{record.name,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR},
      CONCODE = #{record.concode,jdbcType=VARCHAR},
      UNIT = #{record.unit,jdbcType=VARCHAR},
      ID = #{record.id,jdbcType=VARCHAR},
      USERID = #{record.userid,jdbcType=VARCHAR},
      COMPANYID = #{record.companyid,jdbcType=VARCHAR},
      MONTH = #{record.month,jdbcType=VARCHAR},
      JIBEN = #{record.jiben,jdbcType=DECIMAL},
      JIXIAO = #{record.jixiao,jdbcType=DECIMAL},
      GUOJIE = #{record.guojie,jdbcType=DECIMAL},
      JINTIE = #{record.jintie,jdbcType=DECIMAL},
      QTGZ = #{record.qtgz,jdbcType=DECIMAL},
      JIABAN = #{record.jiaban,jdbcType=DECIMAL},
      JIANGJIN = #{record.jiangjin,jdbcType=DECIMAL},
      YFA = #{record.yfa,jdbcType=DECIMAL},
      SHIFA = #{record.shifa,jdbcType=DECIMAL},
      WUXIAN = #{record.wuxian,jdbcType=DECIMAL},
      GEREN = #{record.geren,jdbcType=DECIMAL},
      SHENGYU = #{record.shengyu,jdbcType=DECIMAL},
      YANGLAO = #{record.yanglao,jdbcType=DECIMAL},
      YILIAO = #{record.yiliao,jdbcType=DECIMAL},
      SHIYE = #{record.shiye,jdbcType=DECIMAL},
      GONGJI = #{record.gongji,jdbcType=DECIMAL},
      GONGSHANG = #{record.gongshang,jdbcType=DECIMAL},
      GSWUXIAN = #{record.gswuxian,jdbcType=DECIMAL},
      GONGHUI = #{record.gonghui,jdbcType=DECIMAL},
      GUANLI = #{record.guanli,jdbcType=DECIMAL},
      SHUIJIN = #{record.shuijin,jdbcType=DECIMAL},
      QTJINE = #{record.qtjine,jdbcType=DECIMAL},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      STARTFWDATE = #{record.startfwdate,jdbcType=DATE},
      STARTBXDATE = #{record.startbxdate,jdbcType=DATE},
      SXKK = #{record.sxkk,jdbcType=DECIMAL},
      SHKK = #{record.shkk,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  
   <!-- 分页查询 -->
    <select id="selectPageByExample" parameterType="com.talkweb.ei.outmanager.model.VOutUsergzExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 02 13:19:15 CST 2017.
    -->
    
    
    <!-- 分页 -->
     SELECT * FROM   
	(  
		SELECT DATA.*, ROWNUM RN   
		FROM (
     <!-- 分页 -->
    
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_out_usergz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    
    
    <!-- 分页 -->
    ) DATA   
	)  
	

    WHERE RN BETWEEN ${offset} AND ${limit} 
    <!-- 分页 -->
    
  </select>    
  
  
  
  
  
  
  
  
</mapper>